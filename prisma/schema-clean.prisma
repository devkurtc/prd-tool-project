// Prisma Schema for PRD Tool - Clean Production Version
// Database: SQLite (for local development)

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Core Models

model User {
  id          String    @id @default(cuid())
  email       String    @unique
  name        String
  password    String    // Hashed password
  avatarUrl   String?   @map("avatar_url")
  isActive    Boolean   @default(true) @map("is_active")
  lastLoginAt DateTime? @map("last_login_at")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  // Relations
  prds PRD[] @relation("UserPRDs")

  @@map("users")
}

model PRD {
  id          String   @id @default(cuid())
  title       String
  description String?
  content     String   @default("")
  status      String   @default("DRAFT") // DRAFT, REVIEW, APPROVED, ARCHIVED
  isPublic    Boolean  @default(false) @map("is_public")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  
  // Author relationship
  authorId String @map("author_id")
  author   User   @relation("UserPRDs", fields: [authorId], references: [id], onDelete: Cascade)

  // Versions
  versions PRDVersion[]

  @@map("prds")
}

model PRDVersion {
  id        String   @id @default(cuid())
  version   Int
  content   String
  changeLog String?  @map("change_log")
  createdAt DateTime @default(now()) @map("created_at")
  
  // PRD relationship
  prdId String @map("prd_id")
  prd   PRD    @relation(fields: [prdId], references: [id], onDelete: Cascade)
  
  // Author
  authorId String @map("author_id")
  
  @@unique([prdId, version])
  @@map("prd_versions")
}

// Session management for authentication
model Session {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String   @map("user_id")
  expiresAt DateTime @map("expires_at")
  createdAt DateTime @default(now()) @map("created_at")

  @@map("sessions")
}