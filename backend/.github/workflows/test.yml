name: Backend API Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install dependencies
      working-directory: ./backend
      run: npm ci

    - name: Setup test database
      working-directory: ./backend
      run: |
        DATABASE_URL="file:./test.db" npx prisma migrate dev --name init --schema=../prisma/schema.prisma
        npx prisma generate --schema=../prisma/schema.prisma

    - name: Run tests
      working-directory: ./backend
      run: npm test

    - name: Run tests with coverage
      working-directory: ./backend
      run: npm run test:coverage

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./backend/coverage/lcov.info
        flags: backend
        name: backend-coverage
        fail_ci_if_error: true

    - name: Test Swagger documentation generation
      working-directory: ./backend
      run: |
        npm run build
        node -e "
          import('./dist/swagger/swagger.js').then(({specs}) => {
            console.log('‚úÖ Swagger specs generated successfully');
            console.log('üìä API endpoints documented:', Object.keys(specs.paths || {}).length);
          }).catch(err => {
            console.error('‚ùå Swagger generation failed:', err);
            process.exit(1);
          });
        "

    - name: Lint code
      working-directory: ./backend
      run: npm run lint

    - name: Check TypeScript compilation
      working-directory: ./backend
      run: npm run build